{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"mb-3\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"exampleInputEmail1\",\n  class: \"form-label\"\n}, \"Email address\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"emailHelp\",\n  class: \"form-text\"\n}, \"We'll never share your email with anyone else.\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"mb-3\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"exampleInputPassword1\",\n  class: \"form-label\"\n}, \"Password\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Login\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers($event => $setup.login(), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.credential.email = $event),\n    \"aria-describedby\": \"emailHelp\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.credential.email]]), _hoisted_4]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.credential.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.credential.password]])]), _hoisted_7], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAETA,KAAK,EAAC;AAAM;gCACbC,oBAAwE;EAAjEC,GAAG,EAAC,oBAAoB;EAACF,KAAK,EAAC;GAAa,eAAa;gCAEhEC,oBAA0F;EAArFE,EAAE,EAAC,WAAW;EAACH,KAAK,EAAC;GAAY,gDAA8C;;EAEnFA,KAAK,EAAC;AAAM;gCACbC,oBAAsE;EAA/DC,GAAG,EAAC,uBAAuB;EAACF,KAAK,EAAC;GAAa,UAAQ;gCAGlEC,oBAA4D;EAApDG,IAAI,EAAC,QAAQ;EAACJ,KAAK,EAAC;GAAkB,OAAK;;;uBAX3DK,oBAaM,OAbNC,UAaM,GAZFL,oBAWO;IAXAM,QAAM,qDAAUC,YAAK;MACxBP,oBAIM,OAJNQ,UAIM,GAHFC,UAAwE,kBACxET,oBAA6F;IAAtFG,IAAI,EAAC,MAAM;IAACJ,KAAK,EAAC,WAAW;+DAAUQ,iBAAU,CAACG,KAAK;IAAE,kBAAgB,EAAC;iDAAnCH,iBAAU,CAACG,KAAK,KAC9DC,UAA0F,IAE9FX,oBAGM,OAHNY,UAGM,GAFFC,UAAsE,kBACtEb,oBAA0E;IAAnEG,IAAI,EAAC,UAAU;IAACJ,KAAK,EAAC,cAAc;+DAAUQ,iBAAU,CAACO,QAAQ;iDAAnBP,iBAAU,CAACO,QAAQ,OAE5EC,UAA4D","names":["class","_createElementVNode","for","id","type","_createElementBlock","_hoisted_1","onSubmit","$setup","_hoisted_2","_hoisted_3","email","_hoisted_4","_hoisted_5","_hoisted_6","password","_hoisted_7"],"sourceRoot":"","sources":["/Users/yeelam/Documents/Year3 sem1/COMP3047/Lab/Asm03/Front/src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <form @submit.prevent=\"login()\">\n            <div class=\"mb-3\">\n                <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n                <input type=\"text\" class=\"form-text\" v-model=\"credential.email\" aria-describedby=\"emailHelp\">\n                <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n            </div>\n            <div class=\"mb-3\">\n                <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n                <input type=\"password\" class=\"form-control\" v-model=\"credential.password\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n// import jwt_decode from \"jwt-decode\";\n\n\nexport default {\n    name: 'LoginView',\n    setup() {\n        const credential = ref({});\n\n        const login = async function () {\n\n            var response = await fetch(\"http://localhost:3000/hashlogin\", {\n                method: \"post\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(credential.value)\n            });\n\n            if (response.ok) {\n                var data = await response.json()\n                // localStorage.setItem(\"token\", data.token);\n                // localStorage.setItem(\"type\", data.type);\n                localStorage.setItem(\"userId\", data.userId);\n\n                // var decoded = jwt_decode(data.token);\n                // alert(JSON.stringify(decoded))\n\n                // alert(JSON.stringify(data))\n                alert(data.type + \", login Successfully.\")\n                location.assign(\"/\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        return {\n            credential, login\n        }\n    }\n}\n</script>\n  "]},"metadata":{},"sourceType":"module"}