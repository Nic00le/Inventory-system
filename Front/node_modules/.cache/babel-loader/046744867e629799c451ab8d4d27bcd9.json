{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  name: 'GiftForm',\n  props: {\n    id: String,\n    newRecord: Boolean\n  },\n  setup(props) {\n    // var url = window.location.href;\n    // var array = url.split('/');\n    // var type = array[array.length - 2];\n\n    const records = ref({});\n    onMounted(async () => {\n      if (props.id) {\n        var response = await fetch(\"/api/records/\" + props.id);\n        if (response.ok) {\n          records.value = await response.json();\n        }\n      }\n    });\n    const submitRecords = async function () {\n      records.value.type = \"gifts\";\n\n      // event.preventDefault();\n\n      var response = await fetch(\"/api/gift/detail/\", {\n        method: \"post\",\n        headers: {\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Type': 'application/json'\n        },\n        // body: new URLSearchParams(new FormData(event.target))\n        body: JSON.stringify(records.value)\n      });\n      console.log(records.value);\n      if (response.ok) {\n        var text = await response.text();\n        alert(text);\n        // location.assign(\"/bookings\")\n      } else {\n        alert(response.statusText);\n      }\n    };\n    const updateRecords = async function () {\n      delete records.value._id;\n      var response = await fetch(\"/api/record/update/\" + props.id, {\n        method: \"put\",\n        headers: {\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Type': 'application/json'\n        },\n        // body: new URLSearchParams(new FormData(event.target))\n        body: JSON.stringify(records.value)\n      });\n      console.log(records.value);\n      if (response.ok) {\n        var text = await response.text();\n        alert(text);\n        // location.assign(\"/bookings\")\n      } else {\n        alert(response.statusText);\n      }\n    };\n    const deleteRecords = async function () {\n      var response = await fetch(\"/api/record/delete/\" + props.id, {\n        method: \"delete\",\n        headers: {\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Type': 'application/json'\n        }\n\n        // body: new URLSearchParams(new FormData(event.target))\n        // body: JSON.stringify(records.value)\n      });\n\n      if (response.ok) {\n        // var text = await response.text();\n        alert(\"Booking is deleted\");\n        // location.assign(\"/bookings\")\n      } else {\n        alert(response.statusText);\n      }\n    };\n    return {\n      submitRecords,\n      deleteRecords,\n      updateRecords,\n      records\n    };\n  }\n};","map":{"version":3,"mappings":"AA8DA,SAASA,GAAG,EAAEC,SAAS,QAAO,KAAK;AAEnC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAC;IACFC,EAAE,EAAEC,MAAM;IACVC,SAAS,EAAEC;EACf,CAAC;EACDC,KAAK,CAACL,KAAK,EAAE;IACT;IACA;IACA;;IAEA,MAAMM,OAAM,GAAIT,GAAG,CAAC,CAAC,CAAC,CAAC;IAEvBC,SAAS,CAAC,YAAY;MAClB,IAAIE,KAAK,CAACC,EAAE,EAAE;QACV,IAAIM,QAAO,GAAI,MAAMC,KAAK,CAAC,eAAc,GAAIR,KAAK,CAACC,EAAE;QAErD,IAAIM,QAAQ,CAACE,EAAE,EAAE;UACbH,OAAO,CAACI,KAAI,GAAI,MAAMH,QAAQ,CAACI,IAAI,EAAE;QACzC;MACJ;IACJ,CAAC,CAAC;IAGF,MAAMC,aAAY,GAAI,kBAAkB;MACpCN,OAAO,CAACI,KAAK,CAACG,IAAG,GAAI,OAAM;;MAE3B;;MAEA,IAAIN,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAmB,EAAE;QAC5CM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL;UACA,cAAc,EAAE;QACpB,CAAC;QAED;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO,CAACI,KAAK;MACtC,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CAACd,OAAO,CAACI,KAAK;MACzB,IAAIH,QAAQ,CAACE,EAAE,EAAE;QAEb,IAAIY,IAAG,GAAI,MAAMd,QAAQ,CAACc,IAAI,EAAE;QAChCC,KAAK,CAACD,IAAI,CAAC;QACX;MACJ,OAAO;QACHC,KAAK,CAACf,QAAQ,CAACgB,UAAU;MAC7B;IAEJ;IAEA,MAAMC,aAAY,GAAI,kBAAkB;MACpC,OAAOlB,OAAO,CAACI,KAAK,CAACe,GAAG;MAExB,IAAIlB,QAAO,GAAI,MAAMC,KAAK,CAAC,qBAAoB,GAAIR,KAAK,CAACC,EAAE,EAAE;QACzDa,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL;UACA,cAAc,EAAE;QACpB,CAAC;QAED;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,OAAO,CAACI,KAAK;MACtC,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CAACd,OAAO,CAACI,KAAK;MACzB,IAAIH,QAAQ,CAACE,EAAE,EAAE;QAEb,IAAIY,IAAG,GAAI,MAAMd,QAAQ,CAACc,IAAI,EAAE;QAChCC,KAAK,CAACD,IAAI,CAAC;QACX;MACJ,OAAO;QACHC,KAAK,CAACf,QAAQ,CAACgB,UAAU;MAC7B;IACJ;IAEA,MAAMG,aAAY,GAAI,kBAAkB;MAEpC,IAAInB,QAAO,GAAI,MAAMC,KAAK,CAAC,qBAAoB,GAAIR,KAAK,CAACC,EAAC,EAAI;QAC1Da,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACL;UACA,cAAc,EAAE;QACpB;;QAEA;QACA;MACJ,CAAC,CAAC;;MACF,IAAIR,QAAQ,CAACE,EAAE,EAAE;QAEb;QACAa,KAAK,CAAC,oBAAoB,CAAC;QAC3B;MACJ,OAAO;QACHA,KAAK,CAACf,QAAQ,CAACgB,UAAU;MAC7B;IACJ;IAEA,OAAO;MACHX,aAAa;MACbc,aAAa;MACbF,aAAa;MACblB;IACJ;EACJ;AACJ","names":["ref","onMounted","name","props","id","String","newRecord","Boolean","setup","records","response","fetch","ok","value","json","submitRecords","type","method","headers","body","JSON","stringify","console","log","text","alert","statusText","updateRecords","_id","deleteRecords"],"sourceRoot":"","sources":["/Users/yeelam/Documents/Year3 sem1/COMP3047/Lab/Asm03/Front/src/components/GiftForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"submitRecords\">\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputEmail4\">Title</label>\n                <input type=\"text\" class=\"form-control\" id=\"Title\" v-model=\"records.title\">\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputPassword4\">Category</label>\n                <select id=\"Category\" class=\"form-control\" v-model=\"records.category\">\n                    <option selected>Open this select menu</option>\n                    <option value=\"Cakes\">Cakes</option>\n                    <option value=\"Flowers\">Flowers</option>\n                    <option value=\"PersonalizedGifts\">Personalized Gifts</option>\n                    <option value=\"toys\">toys</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputPassword4\">Image</label>\n                <input type=\"text\" class=\"form-control\" id=\"Image\" v-model=\"records.image\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"inputEmail4\">Amount</label>\n                <input type=\"number\" class=\"form-control\" id=\"Amount\" v-model=\"records.amount\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"inputEmail4\">Unit Price (HKD)</label>\n                <input type=\"number\" class=\"form-control\" id=\"Price\" v-model=\"records.price\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputEmail4\">Donated by</label>\n                <input type=\"text\" class=\"form-control\" id=\"DonatedBy\" v-model=\"records.donated_by\">\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputPassword4\">Location</label>\n                <input type=\"text\" class=\"form-control\" id=\"Location\" v-model=\"records.location\">\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputEmail4\">Descriptions</label>\n                <input type=\"text\" class=\"form-control\" id=\"Descriptions\"\n                    v-model=\"records.descriptions\">\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputPassword4\">Address 2</label>\n                <input type=\"text\" class=\"form-control\" id=\"Remarks\" v-model=\"records.address\">\n            </div>\n        </div>\n        <button v-if=\"newRecord == true\" type=\"submit\" class=\"btn btn-primary\">Save</button>\n    </form>\n    <div v-if=\"$route.params.id\"> \n        <button @click.prevent=\"updateRecords\" class=\"btn btn-primary\">Save</button> \n        <button @click.prevent=\"deleteRecords\" class=\"btn btn-danger\">Delete</button> \n    </div> \n</template>\n\n<script>\nimport { ref, onMounted} from \"vue\";\n\nexport default {\n    name: 'GiftForm',\n    props:{\n        id: String,\n        newRecord: Boolean\n    },\n    setup(props) {\n        // var url = window.location.href;\n        // var array = url.split('/');\n        // var type = array[array.length - 2];\n\n        const records = ref({});\n\n        onMounted(async () => {\n            if (props.id) {\n                var response = await fetch(\"/api/records/\" + props.id)\n\n                if (response.ok) {\n                    records.value = await response.json();\n                }\n            }\n        });\n        \n\n        const submitRecords = async function () {\n            records.value.type = \"gifts\"\n\n            // event.preventDefault();\n\n            var response = await fetch(\"/api/gift/detail/\", {\n                method: \"post\",\n                headers: {\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Type': 'application/json'\n                },\n\n                // body: new URLSearchParams(new FormData(event.target))\n                body: JSON.stringify(records.value)\n            });\n            console.log(records.value)\n            if (response.ok) {\n\n                var text = await response.text();\n                alert(text);\n                // location.assign(\"/bookings\")\n            } else {\n                alert(response.statusText)\n            }\n\n        }\n\n        const updateRecords = async function () {\n            delete records.value._id;\n\n            var response = await fetch(\"/api/record/update/\" + props.id, {\n                method: \"put\",\n                headers: {\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Type': 'application/json'\n                },\n\n                // body: new URLSearchParams(new FormData(event.target))\n                body: JSON.stringify(records.value)\n            });\n            console.log(records.value)\n            if (response.ok) {\n\n                var text = await response.text();\n                alert(text);\n                // location.assign(\"/bookings\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        const deleteRecords = async function () {\n\n            var response = await fetch(\"/api/record/delete/\" + props.id , {\n                method: \"delete\",\n                headers: {\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Type': 'application/json'\n                }\n\n                // body: new URLSearchParams(new FormData(event.target))\n                // body: JSON.stringify(records.value)\n            });\n            if (response.ok) {\n\n                // var text = await response.text();\n                alert(\"Booking is deleted\");\n                // location.assign(\"/bookings\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        return {\n            submitRecords,\n            deleteRecords,\n            updateRecords,\n            records\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}