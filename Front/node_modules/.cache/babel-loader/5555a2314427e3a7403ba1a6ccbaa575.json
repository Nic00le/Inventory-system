{"ast":null,"code":"import { ref } from \"vue\";\nimport jwt_decode from \"jwt-decode\";\nexport default {\n  name: 'UserDetail',\n  setup() {\n    const credential = ref({});\n    const create = async function () {\n      var response = await fetch(\"/api/userupdate\", {\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(credential.value)\n      });\n      if (response.ok) {\n        var data = await response.json();\n        localStorage.setItem(\"user\", data.token);\n        var decoded = jwt_decode(data.token);\n        alert(JSON.stringify(decoded));\n\n        // alert(JSON.stringify(data))\n        alert(\"login Successfully.\");\n      } else {\n        alert(response.statusText);\n      }\n    };\n    return {\n      credential,\n      create\n    };\n  }\n};","map":{"version":3,"mappings":"AAsCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,UAAS,MAAO,YAAY;AAGnC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,KAAK,GAAG;IACJ,MAAMC,UAAS,GAAIJ,GAAG,CAAC,CAAC,CAAC,CAAC;IAE1B,MAAMK,MAAK,GAAI,kBAAkB;MAE7B,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,UAAU,CAACS,KAAK;MACzC,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACb,IAAIC,IAAG,GAAI,MAAMT,QAAQ,CAACU,IAAI,EAAC;QAC/BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACI,KAAK,CAAC;QAExC,IAAIC,OAAM,GAAInB,UAAU,CAACc,IAAI,CAACI,KAAK,CAAC;QACpCE,KAAK,CAACV,IAAI,CAACC,SAAS,CAACQ,OAAO,CAAC;;QAE7B;QACAC,KAAK,CAAC,qBAAqB;MAE/B,OAAO;QACHA,KAAK,CAACf,QAAQ,CAACgB,UAAU;MAC7B;IACJ;IAEA,OAAO;MACHlB,UAAU;MAAEC;IAChB;EACJ;AACJ","names":["ref","jwt_decode","name","setup","credential","create","response","fetch","method","headers","body","JSON","stringify","value","ok","data","json","localStorage","setItem","token","decoded","alert","statusText"],"sourceRoot":"","sources":["/Users/yeelam/Documents/Year3 sem1/COMP3047/Lab/Asm03/Front/src/components/UserDetail.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <form @submit.prevent=\"create()\">\n            <div class=\"row\">\n                <div class=\"mb-6\">\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" v-model=\"credential.email\" aria-describedby=\"email\">\n                    <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n                </div>\n                <div class=\"mb-6\">\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Full Name</label>\n                    <input type=\"text\" class=\"form-control\" v-model=\"credential.name\" aria-describedby=\"full name\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"mb-4\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n                    <input type=\"password\" class=\"form-control\" v-model=\"credential.password\">\n                </div>\n                <div class=\"mb-4\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Type</label>\n                    <select class=\"form-control\" v-model=\"credential.type\">\n                        <option selected>Open this select menu</option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"user\">User</option>\n                    </select>\n                </div>\n                <div class=\"mb-4\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Phone</label>\n                    <input type=\"password\" class=\"form-control\" v-model=\"credential.phone\">\n                </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport jwt_decode from \"jwt-decode\";\n\n\nexport default {\n    name: 'UserDetail',\n    setup() {\n        const credential = ref({});\n\n        const create = async function () {\n\n            var response = await fetch(\"/api/userupdate\", {\n                method: \"post\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify(credential.value)\n            });\n\n            if (response.ok) {\n                var data = await response.json()\n                localStorage.setItem(\"user\", data.token);\n\n                var decoded = jwt_decode(data.token);\n                alert(JSON.stringify(decoded))\n\n                // alert(JSON.stringify(data))\n                alert(\"login Successfully.\")\n\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        return {\n            credential, create\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}