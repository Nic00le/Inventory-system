{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TheCards from '@/components/TheCards.vue';\nimport { ref, onMounted, computed, watch } from \"vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'TypeView',\n  components: {\n    TheCards\n  },\n  setup() {\n    const records = ref([]);\n    const lastPage = ref(0);\n    const perPage = ref(6);\n    const route = useRoute();\n    const type = route.params.type;\n    const currentPage = ref(1);\n    console.log(records.value);\n    const add = async function () {\n      location.assign(\"/\" + route.params.type + \"/detail\");\n    };\n    const pages = computed(() => {\n      var pages = [];\n      for (var i = 1; i <= lastPage.value; i++) {\n        pages.push(i);\n      }\n      return pages;\n    });\n    const fetchPage = async function (page) {\n      var response = await fetch(\"/api/\" + type + \"?perPage=\" + perPage.value + \"&page=\" + page);\n      if (response.ok) {\n        var data = await response.json();\n        records.value = data.records;\n        lastPage.value = data.pages;\n      } else {\n        alert(response.statusText);\n      }\n    };\n    onMounted(function () {\n      fetchPage(1);\n      // alert(props.msg)\n    });\n\n    watch(currentPage, () => {\n      fetchPage(currentPage.value);\n    });\n    return {\n      records,\n      pages,\n      fetchPage,\n      type,\n      currentPage,\n      add\n    };\n  }\n};","map":{"version":3,"mappings":";AAwCA,OAAOA,QAAO,MAAO,2BAA0B;AAC/C,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAI,QAAS,KAAK;AACrD,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACRP;EACJ,CAAC;EACDQ,KAAK,GAAG;IACJ,MAAMC,OAAM,GAAIR,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMS,QAAO,GAAIT,GAAG,CAAC,CAAC,CAAC;IACvB,MAAMU,OAAM,GAAIV,GAAG,CAAC,CAAC,CAAC;IACtB,MAAMW,KAAI,GAAIP,QAAQ,EAAE;IACxB,MAAMQ,IAAG,GAAID,KAAK,CAACE,MAAM,CAACD,IAAI;IAC9B,MAAME,WAAU,GAAId,GAAG,CAAC,CAAC,CAAC;IAE1Be,OAAO,CAACC,GAAG,CAACR,OAAO,CAACS,KAAK;IAEzB,MAAMC,GAAE,GAAI,kBAAkB;MAC1BC,QAAQ,CAACC,MAAM,CAAC,GAAE,GAAIT,KAAK,CAACE,MAAM,CAACD,IAAG,GAAI,SAAS;IACvD;IAEA,MAAMS,KAAI,GAAInB,QAAQ,CAAC,MAAM;MACzB,IAAImB,KAAI,GAAI,EAAE;MAEd,KAAK,IAAIC,IAAI,CAAC,EAAEA,KAAKb,QAAQ,CAACQ,KAAK,EAAEK,CAAC,EAAE,EAAE;QACtCD,KAAK,CAACE,IAAI,CAACD,CAAC;MAChB;MAEA,OAAOD,KAAK;IAChB,CAAC;IAED,MAAMG,SAAQ,GAAI,gBAAgBC,IAAI,EAAE;MAEpC,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAAC,OAAM,GAAIf,IAAG,GAAI,WAAU,GAAIF,OAAO,CAACO,KAAI,GAAI,QAAO,GAAIQ,IAAI,CAAC;MAE1F,IAAIC,QAAQ,CAACE,EAAE,EAAE;QACb,IAAIC,IAAG,GAAI,MAAMH,QAAQ,CAACI,IAAI,EAAE;QAChCtB,OAAO,CAACS,KAAI,GAAIY,IAAI,CAACrB,OAAO;QAC5BC,QAAQ,CAACQ,KAAI,GAAIY,IAAI,CAACR,KAAK;MAC/B,OAAO;QACHU,KAAK,CAACL,QAAQ,CAACM,UAAU,CAAC;MAC9B;IACJ,CAAC;IAED/B,SAAS,CAAC,YAAY;MAClBuB,SAAS,CAAC,CAAC,CAAC;MACZ;IACJ,CAAC,CAAC;;IAEFrB,KAAK,CAACW,WAAW,EAAE,MAAM;MACrBU,SAAS,CAACV,WAAW,CAACG,KAAK;IAC/B,CAAC,CAAC;IAEF,OAAO;MACHT,OAAO;MACPa,KAAK;MACLG,SAAS;MACTZ,IAAI;MACJE,WAAW;MACXI;IACJ,CAAC;EACL;AACJ","names":["TheCards","ref","onMounted","computed","watch","useRoute","name","components","setup","records","lastPage","perPage","route","type","params","currentPage","console","log","value","add","location","assign","pages","i","push","fetchPage","page","response","fetch","ok","data","json","alert","statusText"],"sourceRoot":"","sources":["/Users/yeelam/Documents/Year3 sem1/COMP3047/Lab/Asm03/Front/src/views/TypeView.vue"],"sourcesContent":["<template>\n        <nav aria-label=\"breadcrumb\">\n            <ol class=\"breadcrumb\">\n                <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n                <li class=\"breadcrumb-item active\" aria-current=\"page\">{{ type }}</li>\n                <button type=\"button\" class=\"btn btn-primary position-absolute top-20 end-0\" @click=\"add\">Add</button>\n            </ol>\n        </nav>\n    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n        <TheCards v-for=\"r in records\" :key=\"r._id\" :id=\"r._id\" :type=\"type\" :src=\"r.image\" :title=\"r.title\"\n            :descriptions=\"r.descriptions\" :quantity=\"r.quantity\" />\n    </div>\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\">\n            <li class=\"page-item\">\n                <a a v-if=\"currentPage > 1\" class=\"page-link\" @click=\"currentPage--\">\n                    <span aria-hidden=\"true\">&laquo;</span>\n                </a>\n            </li>\n            <li class=\"page-item\"><a v-if=\"currentPage > 2\" class=\"page-link\" @click=\"currentPage = currentPage - 2\">{{\n                    currentPage - 2\n            }}</a></li>\n            <li class=\"page-item\"><a v-if=\"currentPage > 1\" class=\"page-link\" @click=\"currentPage--\">{{ currentPage - 1\n            }}</a></li>\n            <li class=\"page-item\"><a class=\"page-link active\">{{ currentPage }}</a></li>\n            <li class=\"page-item\"><a v-if=\"currentPage < pages.length\" class=\"page-link\" @click=\"currentPage++\">{{\n                    currentPage + 1\n            }}</a></li>\n            <li class=\"page-item\"><a v-if=\"currentPage < pages.length - 1\" class=\"page-link\"\n                    @click=\"currentPage = currentPage + 2\">{{ currentPage + 2 }}</a></li>\n            <li class=\"page-item\">\n                <a v-if=\"currentPage < pages.length\" class=\"page-link\" @click=\"currentPage++\">\n                    <span aria-hidden=\"true\">&raquo;</span>\n                </a>\n            </li>\n        </ul>\n    </nav>\n</template>\n\n<script>\nimport TheCards from '@/components/TheCards.vue'\nimport { ref, onMounted, computed, watch } from \"vue\";\nimport { useRoute } from 'vue-router';\n\nexport default {\n    name: 'TypeView',\n    components: {\n        TheCards\n    },\n    setup() {\n        const records = ref([]);\n        const lastPage = ref(0);\n        const perPage = ref(6);\n        const route = useRoute();\n        const type = route.params.type;\n        const currentPage = ref(1);\n\n        console.log(records.value)\n\n        const add = async function () {\n            location.assign(\"/\" + route.params.type + \"/detail\")\n        }\n\n        const pages = computed(() => {\n            var pages = [];\n\n            for (var i = 1; i <= lastPage.value; i++) {\n                pages.push(i)\n            }\n\n            return pages;\n        })\n\n        const fetchPage = async function (page) {\n\n            var response = await fetch(\"/api/\" + type + \"?perPage=\" + perPage.value + \"&page=\" + page);\n\n            if (response.ok) {\n                var data = await response.json();\n                records.value = data.records;\n                lastPage.value = data.pages;\n            } else {\n                alert(response.statusText);\n            }\n        };\n\n        onMounted(function () {\n            fetchPage(1);\n            // alert(props.msg)\n        });\n\n        watch(currentPage, () => {\n            fetchPage(currentPage.value)\n        });\n\n        return {\n            records,\n            pages,\n            fetchPage,\n            type,\n            currentPage,\n            add\n        };\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}