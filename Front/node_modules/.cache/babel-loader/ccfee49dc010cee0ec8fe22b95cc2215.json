{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  name: 'UserDetail',\n  props: {\n    id: String,\n    newRecord: Boolean\n  },\n  setup(props) {\n    const user = ref({});\n    onMounted(async () => {\n      if (props.id) {\n        var response = await fetch(\"/api/user/detail/\" + props.id);\n        console.log(props.id);\n        console.log(response);\n        if (response.ok) {\n          user.value = await response.json();\n        }\n      }\n    });\n    const createUser = async function () {\n      var response = await fetch(\"/api/create\", {\n        method: \"post\",\n        headers: {\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Type': 'application/json'\n        },\n        // body: new URLSearchParams(new FormData(event.target))\n        body: JSON.stringify(user.value)\n      });\n      console.log(user.value);\n      if (response.ok) {\n        var text = await response.text();\n        alert(text);\n        // location.assign(\"/bookings\")\n      } else {\n        alert(response.statusText);\n      }\n    };\n    const updateUser = async function () {\n      delete user.value._id;\n      var response = await fetch(\"/api/user/update/\" + props.id, {\n        method: \"put\",\n        headers: {\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Type': 'application/json'\n        },\n        // body: new URLSearchParams(new FormData(event.target))\n        body: JSON.stringify(user.value)\n      });\n      console.log(user.value);\n      if (response.ok) {\n        var text = await response.text();\n        alert(text);\n        // location.assign(\"/bookings\")\n      } else {\n        alert(response.statusText);\n      }\n    };\n    const deleteUser = async function () {\n      console.log(props.id);\n      var response = await fetch(\"/api/user/delete/\" + props.id, {\n        method: \"delete\",\n        headers: {\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n          'Content-Type': 'application/json'\n        }\n\n        // body: new URLSearchParams(new FormData(event.target))\n        // body: JSON.stringify(records.value)\n      });\n\n      if (response.ok) {\n        // var text = await response.text();\n        alert(\"User is deleted\");\n        // location.assign(\"/bookings\")\n      } else {\n        alert(response.statusText);\n      }\n    };\n    return {\n      user,\n      createUser,\n      updateUser,\n      deleteUser\n    };\n  }\n};","map":{"version":3,"mappings":"AA0CA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAGpC,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACHC,EAAE,EAAEC,MAAM;IACVC,SAAS,EAAEC;EACf,CAAC;EACDC,KAAK,CAACL,KAAK,EAAE;IACT,MAAMM,IAAG,GAAIT,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpBC,SAAS,CAAC,YAAY;MAClB,IAAIE,KAAK,CAACC,EAAE,EAAE;QACV,IAAIM,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAkB,GAAIR,KAAK,CAACC,EAAE;QACzDQ,OAAO,CAACC,GAAG,CAACV,KAAK,CAACC,EAAE;QACpBQ,OAAO,CAACC,GAAG,CAACH,QAAQ;QAEpB,IAAIA,QAAQ,CAACI,EAAE,EAAE;UACbL,IAAI,CAACM,KAAI,GAAI,MAAML,QAAQ,CAACM,IAAI,EAAE;QACtC;MACJ;IACJ,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAI,kBAAkB;MAEjC,IAAIP,QAAO,GAAI,MAAMC,KAAK,CAAC,aAAa,EAAE;QACtCO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL;UACA,cAAc,EAAE;QACpB,CAAC;QAED;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAACM,KAAK;MACnC,CAAC,CAAC;MACFH,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACM,KAAK;MACtB,IAAIL,QAAQ,CAACI,EAAE,EAAE;QAEb,IAAIS,IAAG,GAAI,MAAMb,QAAQ,CAACa,IAAI,EAAE;QAChCC,KAAK,CAACD,IAAI,CAAC;QACX;MACJ,OAAO;QACHC,KAAK,CAACd,QAAQ,CAACe,UAAU;MAC7B;IACJ;IAEA,MAAMC,UAAS,GAAI,kBAAkB;MACjC,OAAOjB,IAAI,CAACM,KAAK,CAACY,GAAG;MAErB,IAAIjB,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAkB,GAAIR,KAAK,CAACC,EAAE,EAAE;QACvDc,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL;UACA,cAAc,EAAE;QACpB,CAAC;QAED;QACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAACM,KAAK;MACnC,CAAC,CAAC;MACFH,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACM,KAAK;MACtB,IAAIL,QAAQ,CAACI,EAAE,EAAE;QAEb,IAAIS,IAAG,GAAI,MAAMb,QAAQ,CAACa,IAAI,EAAE;QAChCC,KAAK,CAACD,IAAI,CAAC;QACX;MACJ,OAAO;QACHC,KAAK,CAACd,QAAQ,CAACe,UAAU;MAC7B;IACJ;IAEA,MAAMG,UAAS,GAAI,kBAAkB;MACjChB,OAAO,CAACC,GAAG,CAACV,KAAK,CAACC,EAAE;MAEpB,IAAIM,QAAO,GAAI,MAAMC,KAAK,CAAC,mBAAkB,GAAIR,KAAK,CAACC,EAAC,EAAI;QACxDc,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACL;UACA,cAAc,EAAE;QACpB;;QAEA;QACA;MACJ,CAAC,CAAC;;MACF,IAAIT,QAAQ,CAACI,EAAE,EAAE;QAEb;QACAU,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACJ,OAAO;QACHA,KAAK,CAACd,QAAQ,CAACe,UAAU;MAC7B;IACJ;IAEA,OAAO;MACHhB,IAAI;MACJQ,UAAU;MACVS,UAAU;MACVE;IACJ;EACJ;AACJ","names":["ref","onMounted","name","props","id","String","newRecord","Boolean","setup","user","response","fetch","console","log","ok","value","json","createUser","method","headers","body","JSON","stringify","text","alert","statusText","updateUser","_id","deleteUser"],"sourceRoot":"","sources":["/Users/yeelam/Documents/Year3 sem1/COMP3047/Lab/Asm03/Front/src/components/UserDetail.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <form @submit.prevent=\"createUser()\">\n            <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" v-model=\"user.email\" aria-describedby=\"email\">\n                    <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Full Name</label>\n                    <input type=\"text\" class=\"form-control\" v-model=\"user.name\" aria-describedby=\"full name\">\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"form-group col-md-4\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n                    <input type=\"password\" class=\"form-control\" v-model=\"user.password\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Type</label>\n                    <select class=\"form-control\" v-model=\"user.type\">\n                        <option selected>Open this select menu</option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"user\">User</option>\n                    </select>\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Phone</label>\n                    <input type=\"text\" class=\"form-control\" v-model=\"user.phone\">\n                </div>\n            </div>\n            <button v-if=\"!$route.params.id\" type=\"submit\" class=\"btn btn-primary\">Save</button>\n        </form>\n        <div v-if=\"$route.params.id\">\n            <button @click.prevent=\"updateUser\" class=\"btn btn-primary\">Update</button>\n            <button @click.prevent=\"deleteUser\" class=\"btn btn-danger\">Delete</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\n\n\nexport default {\n    name: 'UserDetail',\n    props: {\n        id: String,\n        newRecord: Boolean\n    },\n    setup(props) {\n        const user = ref({});\n\n        onMounted(async () => {\n            if (props.id) {\n                var response = await fetch(\"/api/user/detail/\" + props.id)\n                console.log(props.id)\n                console.log(response)\n\n                if (response.ok) {\n                    user.value = await response.json();\n                }\n            }\n        });\n\n        const createUser = async function () {\n\n            var response = await fetch(\"/api/create\", {\n                method: \"post\",\n                headers: {\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Type': 'application/json'\n                },\n\n                // body: new URLSearchParams(new FormData(event.target))\n                body: JSON.stringify(user.value)\n            });\n            console.log(user.value)\n            if (response.ok) {\n\n                var text = await response.text();\n                alert(text);\n                // location.assign(\"/bookings\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        const updateUser = async function () {\n            delete user.value._id;\n\n            var response = await fetch(\"/api/user/update/\" + props.id, {\n                method: \"put\",\n                headers: {\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Type': 'application/json'\n                },\n\n                // body: new URLSearchParams(new FormData(event.target))\n                body: JSON.stringify(user.value)\n            });\n            console.log(user.value)\n            if (response.ok) {\n\n                var text = await response.text();\n                alert(text);\n                // location.assign(\"/bookings\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        const deleteUser = async function () {\n            console.log(props.id)\n\n            var response = await fetch(\"/api/user/delete/\" + props.id , {\n                method: \"delete\",\n                headers: {\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Type': 'application/json'\n                }\n\n                // body: new URLSearchParams(new FormData(event.target))\n                // body: JSON.stringify(records.value)\n            });\n            if (response.ok) {\n\n                // var text = await response.text();\n                alert(\"User is deleted\");\n                // location.assign(\"/bookings\")\n            } else {\n                alert(response.statusText)\n            }\n        }\n\n        return {\n            user,\n            createUser,\n            updateUser,\n            deleteUser\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}